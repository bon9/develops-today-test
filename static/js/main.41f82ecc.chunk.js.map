{"version":3,"sources":["components/Post/Post.styles.js","components/Post/Post.js","components/Posts/Posts.styles.js","hooks/useHandleChange.js","components/Posts/Posts.js","store/actions/actionTypes.js","store/actions/postsActions.js","containers/PostsContainer.js","components/PostDetail/CreateComment/CreateComment.styles.js","components/PostDetail/CreateComment/CreateComment.js","components/PostDetail/Comments/Comments.styles.js","components/PostDetail/Comments/Comments.js","components/PostDetail/PostDetail.styles.js","components/PostDetail/PostDetail.js","containers/ViewPostContainer.js","App.styles.js","components/Header/Header.styles.js","components/Header/Header.js","App.js","store/reducers/postsReducer.js","api/blogApi.js","shared/utilities.js","store/sagas/postsSaga.js","store/sagas/index.js","index.js"],"names":["PostWrap","styled","div","Data","Author","PublishDate","span","Description","p","DeleteButton","button","Post","title","creator","body","date","id","onDeletePost","to","onClick","PostsWrap","NewPostWrap","Input","input","Textarea","textarea","Button","useState","titlePost","setTitle","bodyPost","setBody","handleChange","e","type","target","value","propTypes","posts","PropTypes","array","onCreatePost","func","isRequired","Posts","useHandleChange","setData","outputPosts","map","post","key","placeholder","onChange","newPost","disabled","FETCH_POSTS","CREATE_POST","DELETE_POST","FETCH_POST_DETAIL","SAVE_EDIT","CREATE_COMMENT","fetchPosts","actionTypes","fetchPostsStart","fetchPostsSuccess","payload","fetchPostsFail","errorMessage","createPostStart","createPostSuccess","createPostFail","deletePostStart","deletePostSuccess","deletePostFail","fetchPostDetail","fetchPostDetailStart","fetchPostDetailSuccess","postDetail","fetchPostDetailFail","saveEditStart","saveEditSuccess","saveEditFail","createCommentStart","createCommentSuccess","createCommentFail","connect","state","error","onFetchPosts","actions","setReferrerDefault","useEffect","CreateCommentWrap","BodyComment","ButtonCreate","CreateComment","onCreateComment","areaValue","serAreaValue","newComment","CommentsWrap","Comment","Comments","comments","outputComments","com","ViewPostWrap","CreateDate","Title","Body","InputEditWrap","InputTitle","InputBody","PostDetail","onSaveEdit","editing","setEditing","summary","onFetchPostDetail","editedPost","isFetching","referrer","postId","useParams","AppWrap","BodyWrap","HeaderWrap","header","HeaderTitle","h2","NavButton","Header","handleClickBack","App","setReferrer","routes","path","exact","initialState","isCreating","isFetchingPostDetail","isEditing","isCommenting","reducer","action","instanse","axios","create","baseURL","headers","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","fetchPostsSaga","createPostSaga","deletePostSaga","fetchPostDetailSaga","saveEditSaga","createCommentSaga","get","createPost","dataPost","deletePost","delete","saveEdit","updatePost","put","createComment","call","response","data","message","watchPosts","all","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","rootReducers","combineReducers","postsReducer","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41f82ecc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PostWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0;\r\n  transition: all 0.5s ease;\r\n  padding: 0.25em;\r\n  box-shadow: 0 0 2px 2px transparent;\r\n`;\r\n\r\nexport const Data = styled.div`\r\n  flex-grow: 1;\r\n  margin-right: 1em;\r\n  padding: 0.5em;\r\n  transition: all 0.25s ease;\r\n  &:hover {\r\n    box-shadow: 0 0 2px 2px lightgrey;\r\n    border-radius: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  a:active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const Author = styled.div`\r\n  display: inline-block;\r\n  font-size: 1em;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  font-weight: 600;\r\n  margin-right: 0.5em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const PublishDate = styled.span`\r\n  display: inline-block;\r\n  color: rgba(0, 0, 0, 0.4);\r\n  font-size: 0.75em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin-left: 0.5em;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  align-self: center;\r\n  box-shadow: 0 0 0 1px red inset;\r\n  color: red;\r\n  font-size: 0.8rem;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.4em 1em;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  &:hover:enabled {\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: red;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  PostWrap,\r\n  PublishDate,\r\n  Description,\r\n  Author,\r\n  DeleteButton,\r\n  Data\r\n} from \"./Post.styles\";\r\n\r\nPost.propTypes = {\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  creator: PropTypes.string,\r\n  date: PropTypes.string,\r\n  id: PropTypes.number,\r\n  onDeletePost: PropTypes.func\r\n};\r\n\r\nfunction Post({ title, body, creator, date, id, onDeletePost }) {\r\n  return (\r\n    <PostWrap>\r\n      <Data>\r\n        <Link to={`/posts/${id}`}>\r\n          <Author>{creator}</Author>\r\n          <PublishDate>{date}</PublishDate>\r\n          <Description>{title}</Description>\r\n        </Link>\r\n      </Data>\r\n      <DeleteButton onClick={() => onDeletePost(id)}>delete</DeleteButton>\r\n    </PostWrap>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 100%;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nexport const NewPostWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const Input = styled.input`\r\n  flex: 1 0 auto;\r\n  max-width: 100%;\r\n  padding: 0.5em;\r\n  margin-bottom: 0.25em;\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  color: rgba(0, 0, 0, 0.9);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n  padding: 0.5em;\r\n  margin-bottom: 1em;\r\n\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  box-shadow: 0 0 0 1px #21ba45 inset;\r\n  color: #21ba45;\r\n  font-size: 1rem;\r\n  min-height: 1em;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.75em 1.5em;\r\n  font-weight: 700;\r\n  line-height: 1em;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  &:hover:enabled {\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: #21ba45;\r\n    letter-spacing: 0.05em;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\n\r\nexport default (title = \"\", body = \"\") => {\r\n  const [titlePost, setTitle] = useState(title);\r\n  const [bodyPost, setBody] = useState(body);\r\n\r\n  const handleChange = (e, type) => {\r\n    if (type === \"title\") {\r\n      setTitle(e.target.value);\r\n    }\r\n    if (type === \"body\") {\r\n      setBody(e.target.value);\r\n    }\r\n    if (type === \"reset\") {\r\n      setBody(\"\");\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  return [titlePost, bodyPost, handleChange];\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Post from \"./../Post/Post\";\r\nimport {\r\n  PostsWrap,\r\n  Button,\r\n  NewPostWrap,\r\n  Input,\r\n  Textarea\r\n} from \"./Posts.styles\";\r\nimport useHandleChange from \"../../hooks/useHandleChange\";\r\n\r\nPost.propTypes = {\r\n  posts: PropTypes.array,\r\n  onCreatePost: PropTypes.func,\r\n  onDeletePost: PropTypes.func.isRequired\r\n};\r\n\r\nfunction Posts({ posts, onCreatePost, onDeletePost }) {\r\n  const [titlePost, bodyPost, setData] = useHandleChange();\r\n\r\n  if (!posts) {\r\n    return null;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const newPost = {\r\n      titlePost,\r\n      bodyPost\r\n    };\r\n    setData(null, \"reset\");\r\n    onCreatePost(newPost);\r\n  };\r\n\r\n  const outputPosts = posts.map(post => {\r\n    return (\r\n      <Post\r\n        title={post.title || \"Title post\"}\r\n        body={post.body || \"Body post\"}\r\n        creator={post.creator || \"Anybody\"}\r\n        date={post.date || \"Body date\"}\r\n        id={post.id}\r\n        key={post.id}\r\n        onDeletePost={onDeletePost}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PostsWrap>{outputPosts}</PostsWrap>\r\n      <NewPostWrap>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"title\"\r\n          onChange={e => setData(e, \"title\")}\r\n          value={titlePost}\r\n        />\r\n        <Textarea\r\n          type=\"text\"\r\n          placeholder=\"body\"\r\n          onChange={e => setData(e, \"body\")}\r\n          value={bodyPost}\r\n        />\r\n        <Button onClick={handleClick} disabled={!bodyPost || !titlePost}>\r\n          Add new post\r\n        </Button>\r\n      </NewPostWrap>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const FETCH_POSTS_START = \"FETCH_POSTS_START\";\r\nexport const FETCH_POSTS_SUCCESS = \"FETCH_BLOGS_SUCCESS\";\r\nexport const FETCH_POSTS_FAIL = \"FETCH_POSTS_FAIL\";\r\n\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const CREATE_POST_START = \"CREATE_POST_START\";\r\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\";\r\nexport const CREATE_POST_FAIL = \"CREATE_POST_FAIL\";\r\n\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const DELETE_POST_START = \"DELETE_POST_START\";\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\r\nexport const DELETE_POST_FAIL = \"DELETE_POST_FAIL\";\r\n\r\nexport const FETCH_POST_DETAIL = \"FETCH_POST_DETAIL\";\r\nexport const FETCH_POST_DETAIL_START = \"FETCH_POST_DETAIL_START\";\r\nexport const FETCH_POST_DETAIL_SUCCESS = \"FETCH_POST_DETAIL_SUCCESS\";\r\nexport const FETCH_POST_DETAIL_FAIL = \"FETCH_POST_DETAIL_FAIL\";\r\n\r\nexport const SAVE_EDIT = \"SAVE_EDIT\";\r\nexport const SAVE_EDIT_START = \"SAVE_EDIT_START\";\r\nexport const SAVE_EDIT_SUCCESS = \"SAVE_EDIT_SUCCESS\";\r\nexport const SAVE_EDIT_FAIL = \"SAVE_EDIT_FAIL\";\r\n\r\nexport const CREATE_COMMENT = \"CREATE_COMMENT\";\r\nexport const CREATE_COMMENT_START = \"CREATE_COMMENT_START\";\r\nexport const CREATE_COMMENT_SUCCESS = \"CREATE_COMMENT_SUCCESS\";\r\nexport const CREATE_COMMENT_FAIL = \"CREATE_COMMENT_FAIL\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\n// FETCH POST\r\nexport const fetchPosts = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS\r\n  };\r\n};\r\n\r\nexport const fetchPostsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_START\r\n  };\r\n};\r\n\r\nexport const fetchPostsSuccess = posts => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_SUCCESS,\r\n    payload: { posts }\r\n  };\r\n};\r\n\r\nexport const fetchPostsFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// CREATE POST\r\n\r\nexport const createPost = newPost => {\r\n  return {\r\n    type: actionTypes.CREATE_POST,\r\n    payload: { newPost }\r\n  };\r\n};\r\n\r\nexport const createPostStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_START\r\n  };\r\n};\r\n\r\nexport const createPostSuccess = () => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_SUCCESS\r\n  };\r\n};\r\n\r\nexport const createPostFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// DELETE POST\r\nexport const deletePost = id => {\r\n  return {\r\n    type: actionTypes.DELETE_POST,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const deletePostStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_START\r\n  };\r\n};\r\n\r\nexport const deletePostSuccess = () => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_SUCCESS\r\n  };\r\n};\r\n\r\nexport const deletePostFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// FETCH DETAIL POST\r\nexport const fetchPostDetail = id => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const fetchPostDetailStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL_START\r\n  };\r\n};\r\n\r\nexport const fetchPostDetailSuccess = postDetail => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL_SUCCESS,\r\n    payload: { postDetail }\r\n  };\r\n};\r\n\r\nexport const fetchPostDetailFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// EDIT POST\r\nexport const saveEdit = editedPost => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT,\r\n    payload: { editedPost }\r\n  };\r\n};\r\n\r\nexport const saveEditStart = () => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT_START\r\n  };\r\n};\r\nexport const saveEditSuccess = () => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT_SUCCESS\r\n  };\r\n};\r\nexport const saveEditFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// CREATE COMMENT\r\nexport const createComment = newComment => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT,\r\n    payload: { newComment }\r\n  };\r\n};\r\n\r\nexport const createCommentStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_START\r\n  };\r\n};\r\n\r\nexport const createCommentSuccess = () => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_SUCCESS\r\n  };\r\n};\r\n\r\nexport const createCommentFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Posts from \"./../components/Posts/Posts\";\r\nimport * as actions from \"../store/actions\";\r\n\r\nPostsContainer.propTypes = {\r\n  onFetchPosts: PropTypes.func.isRequired,\r\n  onCreatePost: PropTypes.func.isRequired,\r\n  onDeletePost: PropTypes.func.isRequired,\r\n  posts: PropTypes.array,\r\n  error: PropTypes.bool,\r\n  setReferrerDefault: PropTypes.func\r\n};\r\n\r\nfunction PostsContainer({\r\n  onFetchPosts,\r\n  onCreatePost,\r\n  onDeletePost,\r\n  posts,\r\n  error,\r\n  setReferrerDefault\r\n}) {\r\n  useEffect(() => {\r\n    setReferrerDefault();\r\n    onFetchPosts();\r\n  }, [onFetchPosts, setReferrerDefault]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    posts && (\r\n      <Posts\r\n        posts={posts}\r\n        onCreatePost={onCreatePost}\r\n        onDeletePost={onDeletePost}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts.posts,\r\n    error: state.posts.error\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    onFetchPosts: actions.fetchPosts,\r\n    onCreatePost: actions.createPost,\r\n    onDeletePost: actions.deletePost\r\n  }\r\n)(PostsContainer);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CreateCommentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const BodyComment = styled.textarea`\r\n  padding: 0.5em;\r\n  margin-bottom: 1em;\r\n\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const ButtonCreate = styled.button`\r\n  box-shadow: 0 0 0 1px #21ba45 inset;\r\n  color: #21ba45;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  min-height: 1em;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.75em 1.5em;\r\n  font-weight: 700;\r\n  line-height: 1em;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  :hover:enabled {\r\n    color: #fff;\r\n    background-color: #21ba45;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    cursor: initial;\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  BodyComment,\r\n  ButtonCreate,\r\n  CreateCommentWrap\r\n} from \"./CreateComment.styles\";\r\n\r\nCreateComment.propTypes = {\r\n  onCreateComment: PropTypes.func,\r\n  id: PropTypes.number\r\n};\r\n\r\nfunction CreateComment({ onCreateComment, id }) {\r\n  const [areaValue, serAreaValue] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    serAreaValue(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const newComment = {\r\n      id,\r\n      body: areaValue\r\n    };\r\n\r\n    serAreaValue(\"\");\r\n    onCreateComment(newComment);\r\n  };\r\n\r\n  return (\r\n    <CreateCommentWrap>\r\n      <BodyComment\r\n        value={areaValue}\r\n        onChange={handleChange}\r\n        placeholder=\"Add comment\"\r\n      ></BodyComment>\r\n      <ButtonCreate disabled={!areaValue} onClick={handleClick}>\r\n        Create comment\r\n      </ButtonCreate>\r\n    </CreateCommentWrap>\r\n  );\r\n}\r\n\r\nexport default CreateComment;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CommentsWrap = styled.div`\r\n  padding: 0.25em 0.35em;\r\n  margin: 0 0 0.25em 1em;\r\n`;\r\n\r\nexport const Comment = styled.p``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CreateComment from \"./../CreateComment/CreateComment\";\r\nimport { Comment, CommentsWrap } from \"./Comments.styles\";\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array,\r\n  onCreateComment: PropTypes.func,\r\n  id: PropTypes.number\r\n};\r\n\r\nfunction Comments({ comments, onCreateComment, id }) {\r\n  const outputComments = comments.map(com => (\r\n    <Comment key={com.id}>- {com.body}</Comment>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div>Comments:</div>\r\n      <CommentsWrap>{outputComments}</CommentsWrap>\r\n      <CreateComment onCreateComment={onCreateComment} id={id} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ViewPostWrap = styled.div``;\r\n\r\nexport const Author = styled.div`\r\n  display: inline-block;\r\n  font-size: 1.2em;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  font-weight: 600;\r\n  margin-right: 0.5em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const CreateDate = styled.span`\r\n  display: inline-block;\r\n  color: rgba(0, 0, 0, 0.4);\r\n  font-size: 0.8em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  box-shadow: 0 0 0 1px #21ba45 inset;\r\n  color: #21ba45;\r\n  font-size: 0.8em;\r\n  cursor: pointer;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.25em 0.75em;\r\n  font-weight: normal;\r\n  line-height: 1.2;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  margin-left: 1em;\r\n  :hover:enabled {\r\n    color: #fff;\r\n    background-color: #21ba45;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    cursor: initial;\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-style: italic;\r\n  font-size: 1em;\r\n  margin: 0.5em 0;\r\n  span {\r\n    font-style: normal;\r\n  }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  margin-left: 0.5em;\r\n  margin: 0 0 1em 1em;\r\n`;\r\n\r\nexport const InputEditWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5em 0;\r\n`;\r\n\r\nexport const InputTitle = styled.input`\r\n  flex: 1 0 auto;\r\n  max-width: 100%;\r\n  padding: 0.5em;\r\n  margin-bottom: 0.25em;\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  color: rgba(0, 0, 0, 0.9);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const InputBody = styled.textarea`\r\n  padding: 0.5em;\r\n  margin-bottom: 1em;\r\n\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Comments from \"./Comments/Comments\";\r\nimport useHandleChange from \"../../hooks/useHandleChange\";\r\nimport {\r\n  ViewPostWrap,\r\n  Author,\r\n  CreateDate,\r\n  Title,\r\n  Body,\r\n  Button,\r\n  InputEditWrap,\r\n  InputTitle,\r\n  InputBody\r\n} from \"./PostDetail.styles\";\r\n\r\nPostDetail.propTypes = {\r\n  post: PropTypes.object,\r\n  onSaveEdit: PropTypes.func.isRequired,\r\n\r\n  onCreateComment: PropTypes.func.isRequired\r\n};\r\nfunction PostDetail({ post, onSaveEdit, onCreateComment }) {\r\n  const {\r\n    creator = \"Anybody\",\r\n    date = \"Must be date\",\r\n    title,\r\n    body,\r\n    comments,\r\n    id\r\n  } = post;\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [titlePost, bodyPost, setData] = useHandleChange(title, body);\r\n\r\n  const handleClickEdit = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleClickSave = () => {\r\n    setEditing(false);\r\n    onSaveEdit({ titlePost, bodyPost, id, date, creator });\r\n  };\r\n\r\n  let summary = (\r\n    <>\r\n      <Title>\r\n        <span>Title: </span>\r\n        {title}\r\n      </Title>\r\n      <Body>{body}</Body>\r\n    </>\r\n  );\r\n\r\n  if (editing) {\r\n    summary = (\r\n      <InputEditWrap>\r\n        <InputTitle value={titlePost} onChange={e => setData(e, \"title\")} />\r\n        <InputBody value={bodyPost} onChange={e => setData(e, \"body\")} />\r\n      </InputEditWrap>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ViewPostWrap>\r\n      <Author>{creator}</Author>\r\n      <CreateDate>{date}</CreateDate>\r\n      <Button disabled={editing} onClick={handleClickEdit}>\r\n        Edit\r\n      </Button>\r\n      <Button disabled={!editing} onClick={handleClickSave}>\r\n        Save\r\n      </Button>\r\n      {summary}\r\n      <Comments comments={comments} onCreateComment={onCreateComment} id={id} />\r\n    </ViewPostWrap>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PostDetail from \"./../components/PostDetail/PostDetail\";\r\nimport * as actions from \"../store/actions\";\r\n\r\nViewPostContainer.propTypes = {\r\n  onFetchPostDetail: PropTypes.func.isRequired,\r\n  onSaveEdit: PropTypes.func.isRequired,\r\n  onCreateComment: PropTypes.func.isRequired,\r\n  post: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  referrer: PropTypes.string,\r\n  setReferrerDefault: PropTypes.func\r\n};\r\n\r\nfunction ViewPostContainer({\r\n  onFetchPostDetail,\r\n  onSaveEdit,\r\n  onCreateComment,\r\n  post,\r\n  isFetching,\r\n  error,\r\n  referrer\r\n}) {\r\n  let { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    onFetchPostDetail(postId);\r\n  }, [onFetchPostDetail, postId]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (referrer) {\r\n    return <Redirect to={referrer} />;\r\n  }\r\n\r\n  return (\r\n    post && (\r\n      <PostDetail\r\n        post={post}\r\n        onSaveEdit={onSaveEdit}\r\n        onCreateComment={onCreateComment}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    post: state.posts.post,\r\n    error: state.posts.error\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    onFetchPostDetail: actions.fetchPostDetail,\r\n    onSaveEdit: actions.saveEdit,\r\n    onCreateComment: actions.createComment\r\n  }\r\n)(ViewPostContainer);\r\n","import styled from \"styled-components\";\n\nexport const AppWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const BodyWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  padding: 1.5em;\n`;\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderWrap = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  height: 50px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: orange;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h2`\r\n  color: white;\r\n  align-self: center;\r\n`;\r\n\r\nexport const NavButton = styled.button`\r\n  transform: rotate(180deg);\r\n  border: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  background-color: transparent;\r\n  color: #fff;\r\n  font-size: 2em;\r\n  font-weight: 700;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  line-height: 50px;\r\n  margin-left: 20px;\r\n  outline: none;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    cursor: pointer;\r\n    font-size: 2.1em;\r\n    color: lightgreen;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { HeaderWrap, HeaderTitle, NavButton } from \"./Header.styles\";\r\n\r\nHeader.propTypes = {\r\n  handleClickBack: PropTypes.func.isRequired\r\n};\r\n\r\nfunction Header({ handleClickBack }) {\r\n  return (\r\n    <HeaderWrap>\r\n      <NavButton onClick={handleClickBack}>&#10150;</NavButton>\r\n      <HeaderTitle>Develops Today</HeaderTitle>\r\n    </HeaderWrap>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport PostsContainer from \"./containers/PostsContainer\";\nimport ViewPostContainer from \"./containers/ViewPostContainer\";\nimport { AppWrap, BodyWrap } from \"./App.styles\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  const [referrer, setReferrer] = useState(null);\n\n  const setReferrerDefault = () => {\n    setReferrer(null);\n  };\n\n  const handleClickBack = () => {\n    setReferrer(\"/posts\");\n  };\n\n  const routes = (\n    <Switch>\n      <Route path=\"/posts\" exact>\n        <PostsContainer setReferrerDefault={setReferrerDefault} />\n      </Route>\n      <Route path=\"/posts/:postId\" exact>\n        <ViewPostContainer referrer={referrer} />\n      </Route>\n      <Redirect to=\"/posts\" />\n    </Switch>\n  );\n\n  return (\n    <AppWrap>\n      <Header handleClickBack={handleClickBack} />\n      <BodyWrap>{routes}</BodyWrap>\n    </AppWrap>\n  );\n}\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  posts: null,\r\n  post: null,\r\n  isFetching: false,\r\n  isCreating: false,\r\n  isFetchingPostDetail: false,\r\n  isEditing: false,\r\n  isCommenting: false,\r\n  error: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    // FETCH POST\r\n    case actionTypes.FETCH_POSTS_START:\r\n      return { ...state, error: false, isFetching: true };\r\n\r\n    case actionTypes.FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload.posts,\r\n        error: false,\r\n        isFetching: false\r\n      };\r\n\r\n    case actionTypes.FETCH_POSTS_FAIL:\r\n      return { ...state, error: payload.errorMessage, isFetching: false };\r\n\r\n    // CREATE POST\r\n    case actionTypes.CREATE_POST_START:\r\n      return { ...state, error: false, isCreating: true };\r\n\r\n    case actionTypes.CREATE_POST_SUCCESS:\r\n      return { ...state, error: false, isCreating: false };\r\n\r\n    case actionTypes.CREATE_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload.errorMessage,\r\n        isCreating: false\r\n      };\r\n\r\n    // DELETE POST\r\n    case actionTypes.DELETE_POST_START:\r\n      return { ...state, error: false, isCommenting: true };\r\n\r\n    case actionTypes.DELETE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        isCommenting: false\r\n      };\r\n\r\n    case actionTypes.DELETE_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload.errorMessage,\r\n        isCommenting: false\r\n      };\r\n\r\n    // FETCH POST DETAIL\r\n\r\n    case actionTypes.FETCH_POST_DETAIL_START:\r\n      return { ...state, error: false, isFetchingPostDetail: true };\r\n\r\n    case actionTypes.FETCH_POST_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload.postDetail,\r\n        error: false,\r\n        isFetchingPostDetail: false\r\n      };\r\n\r\n    case actionTypes.FETCH_POST_DETAIL_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload.errorMessage,\r\n        isFetchingPostDetail: false\r\n      };\r\n\r\n    // SAVE EDIT\r\n    case actionTypes.SAVE_EDIT_START:\r\n      return { ...state, error: false, isEditing: true };\r\n\r\n    case actionTypes.SAVE_EDIT_SUCCESS:\r\n      return { ...state, error: false, isEditing: false };\r\n\r\n    case actionTypes.SAVE_EDIT_FAIL:\r\n      return { ...state, error: payload.errorMessage, isEditing: false };\r\n\r\n    // CREATE COMMENT\r\n    case actionTypes.CREATE_COMMENT_START:\r\n      return { ...state, error: false, isEditing: true };\r\n\r\n    case actionTypes.CREATE_COMMENT_SUCCESS:\r\n      return { ...state, error: false, isEditing: false };\r\n\r\n    case actionTypes.CREATE_COMMENT_FAIL:\r\n      return { ...state, error: payload.errorMessage, isEditing: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n  baseURL: \"https://simple-blog-api.crew.red\",\r\n  headers: { \"Content-Type\": \"application/json\" }\r\n});\r\n\r\nexport default instanse;\r\n","export function currentDate() {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  return `${year}-${month < 10 ? `0${month}` : month}-${day}`;\r\n}\r\n","import { put, call } from \"redux-saga/effects\";\r\n\r\nimport axios from \"../../api/blogApi\";\r\nimport * as actions from \"../actions\";\r\nimport { currentDate } from \"../../shared/utilities\";\r\n\r\nfunction fetchPosts() {\r\n  return axios.get(\"/posts\");\r\n}\r\n\r\nfunction createPost(dataPost) {\r\n  return axios.post(\"/posts\", dataPost);\r\n}\r\n\r\nfunction deletePost(id) {\r\n  return axios.delete(`/posts/${id}`);\r\n}\r\n\r\nfunction fetchPostDetail(id) {\r\n  return axios.get(`/posts/${id}?_embed=comments`);\r\n}\r\n\r\nfunction saveEdit(id, updatePost) {\r\n  return axios.put(`/posts/${id}`, updatePost);\r\n}\r\n\r\nfunction createComment(newComment) {\r\n  return axios.post(`/comments`, newComment);\r\n}\r\n\r\nexport function* fetchPostsSaga() {\r\n  yield put(actions.fetchPostsStart());\r\n  try {\r\n    const response = yield call(fetchPosts);\r\n    const posts = response.data;\r\n    yield put(actions.fetchPostsSuccess(posts));\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.fetchPostsFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* createPostSaga({ payload }) {\r\n  const {\r\n    newPost: { titlePost, bodyPost, creator = \"Oleh\" }\r\n  } = payload;\r\n  const dataPost = {\r\n    title: titlePost,\r\n    body: bodyPost,\r\n    creator,\r\n    date: currentDate()\r\n  };\r\n\r\n  yield put(actions.createPostStart());\r\n\r\n  try {\r\n    yield call(createPost, dataPost);\r\n    yield put(actions.createPostSuccess());\r\n    yield put(actions.fetchPosts());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.createPostFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* deletePostSaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(actions.deletePostStart());\r\n  try {\r\n    yield call(deletePost, id);\r\n    yield put(actions.deletePostSuccess());\r\n    yield put(actions.fetchPosts());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.deletePostFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* fetchPostDetailSaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(actions.fetchPostDetailStart());\r\n  try {\r\n    const response = yield call(fetchPostDetail, id);\r\n    const postDetail = response.data;\r\n    yield put(actions.fetchPostDetailSuccess(postDetail));\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.fetchPostDetailFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* saveEditSaga({ payload }) {\r\n  const {\r\n    editedPost: { titlePost, bodyPost, id, creator = \"Anybody\", date }\r\n  } = payload;\r\n\r\n  const updatePost = {\r\n    title: titlePost,\r\n    body: bodyPost,\r\n    creator,\r\n    date\r\n  };\r\n\r\n  yield put(actions.saveEditStart());\r\n  try {\r\n    yield call(saveEdit, id, updatePost);\r\n    yield put(actions.fetchPostDetail(id));\r\n    yield put(actions.saveEditSuccess());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.saveEditFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* createCommentSaga({ payload }) {\r\n  const {\r\n    newComment: { body, id }\r\n  } = payload;\r\n\r\n  const newComment = {\r\n    body,\r\n    postId: id\r\n  };\r\n  yield put(actions.createCommentStart());\r\n  try {\r\n    yield call(createComment, newComment);\r\n    yield put(actions.fetchPostDetail(id));\r\n    yield put(actions.createCommentSuccess());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.createCommentFail(errorMessage));\r\n  }\r\n}\r\n","import { takeEvery, all } from \"redux-saga/effects\";\r\nimport {\r\n  fetchPostsSaga,\r\n  createPostSaga,\r\n  deletePostSaga,\r\n  fetchPostDetailSaga,\r\n  saveEditSaga,\r\n  createCommentSaga\r\n} from \"./postsSaga\";\r\n\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport function* watchPosts() {\r\n  yield all([\r\n    takeEvery(actionTypes.FETCH_POSTS, fetchPostsSaga),\r\n    takeEvery(actionTypes.CREATE_POST, createPostSaga),\r\n    takeEvery(actionTypes.DELETE_POST, deletePostSaga),\r\n    takeEvery(actionTypes.FETCH_POST_DETAIL, fetchPostDetailSaga),\r\n    takeEvery(actionTypes.SAVE_EDIT, saveEditSaga),\r\n    takeEvery(actionTypes.CREATE_COMMENT, createCommentSaga)\r\n  ]);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport postsReducer from \"./store/reducers/postsReducer\";\nimport { watchPosts } from \"./store/sagas\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducers = combineReducers({\n  posts: postsReducer\n});\n\nconst store = createStore(\n  rootReducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(watchPosts);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}