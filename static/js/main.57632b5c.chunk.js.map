{"version":3,"sources":["components/Post/Post.styles.js","components/Post/Post.js","components/Posts/Posts.styles.js","components/Posts/Posts.js","store/actions/actionTypes.js","store/actions/postsActions.js","containers/PostsContainer.js","components/PostDetail/CreateComment/CreateComment.styles.js","components/PostDetail/CreateComment/CreateComment.js","components/PostDetail/Comments/Comments.styles.js","components/PostDetail/Comments/Comments.js","components/PostDetail/PostDetail.styles.js","components/PostDetail/PostDetail.js","containers/ViewPostContainer.js","App.styles.js","components/Header/Header.styles.js","components/Header/Header.js","App.js","store/reducers/postsReducer.js","api/blogApi.js","shared/utilities.js","store/sagas/postsSaga.js","store/sagas/index.js","index.js"],"names":["PostWrap","styled","div","Data","Author","PublishDate","span","Description","p","DeleteButton","button","Post","title","creator","body","date","id","onDeletePost","to","onClick","PostsWrap","NewPostWrap","Input","input","Textarea","textarea","Button","propTypes","posts","PropTypes","array","onCreatePost","func","Posts","useState","setTitle","setBody","handleChange","e","type","target","value","outputPosts","map","post","key","placeholder","onChange","newPost","disabled","FETCH_POSTS","CREATE_POST","DELETE_POST","FETCH_POST_DETAIL","SAVE_EDIT","CREATE_COMMENT","fetchPosts","actionTypes","fetchPostsStart","fetchPostsSuccess","payload","fetchPostsFail","errorMessage","createPostStart","createPostSuccess","createPostFail","deletePostStart","deletePostSuccess","deletePostFail","fetchPostDetail","fetchPostDetailStart","fetchPostDetailSuccess","postDetail","fetchPostDetailFail","saveEditStart","saveEditSuccess","saveEditFail","connect","state","error","dispatch","onFetchPosts","actions","setReferrerDefault","useEffect","CreateCommentWrap","BodyComment","ButtonCreate","CreateComment","onCreateComment","areaValue","serAreaValue","newComment","CommentsWrap","Comment","Comments","comments","outputComments","com","ViewPostWrap","CreateDate","Title","Body","InputEditWrap","InputTitle","InputBody","PostDetail","onSaveEdit","editing","setEditing","titleEdit","setTitleEdit","bodyEdit","setBodyEdit","summary","onFetchPostDetail","editedPost","isFetching","referrer","postId","useParams","AppWrap","BodyWrap","HeaderWrap","header","HeaderTitle","h2","NavButton","Header","handleClickBack","App","setReferrer","routes","path","exact","initialState","isCreating","isFetchingPostDetail","isEditing","isCommenting","reducer","action","instanse","axios","create","baseURL","headers","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","fetchPostsSaga","createPostSaga","deletePostSaga","fetchPostDetailSaga","saveEditSaga","createCommentSaga","put","get","response","data","message","dataPost","delete","updatePost","watchPosts","all","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","rootReducers","combineReducers","postsReducer","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57632b5c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PostWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0.25em 0;\r\n  transition: all 0.5s ease;\r\n  padding: 0.25em;\r\n  box-shadow: 0 0 2px 2px transparent;\r\n`;\r\n\r\nexport const Data = styled.div`\r\n  flex-grow: 1;\r\n  margin-right: 1em;\r\n  &:hover {\r\n    box-shadow: 0 0 2px 2px lightgrey;\r\n    border-radius: 0.3em;\r\n    cursor: pointer;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  a:active {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const Author = styled.div`\r\n  display: inline-block;\r\n  font-size: 1em;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  font-weight: 600;\r\n  margin-right: 0.5em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const PublishDate = styled.span`\r\n  display: inline-block;\r\n  color: rgba(0, 0, 0, 0.4);\r\n  font-size: 0.75em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin-left: 0.5em;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  align-self: center;\r\n  box-shadow: 0 0 0 1px red inset;\r\n  color: red;\r\n  font-size: 0.8rem;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.4em 1em;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  &:hover:enabled {\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: red;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  PostWrap,\r\n  PublishDate,\r\n  Description,\r\n  Author,\r\n  DeleteButton,\r\n  Data\r\n} from \"./Post.styles\";\r\n\r\nPost.propTypes = {\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  creator: PropTypes.string,\r\n  date: PropTypes.string,\r\n  id: PropTypes.number,\r\n  onDeletePost: PropTypes.func\r\n};\r\n\r\nfunction Post({ title, body, creator, date, id, onDeletePost }) {\r\n  return (\r\n    <PostWrap>\r\n      <Data>\r\n        <Link to={`/posts/${id}`}>\r\n          <Author>{creator}</Author>\r\n          <PublishDate>{date}</PublishDate>\r\n          <Description>{title}</Description>\r\n        </Link>\r\n      </Data>\r\n      <DeleteButton onClick={() => onDeletePost(id)}>delete</DeleteButton>\r\n    </PostWrap>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 100%;\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nexport const NewPostWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const Input = styled.input`\r\n  flex: 1 0 auto;\r\n  max-width: 100%;\r\n  padding: 0.5em;\r\n  margin-bottom: 0.25em;\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  color: rgba(0, 0, 0, 0.9);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n  padding: 0.5em;\r\n  margin-bottom: 1em;\r\n\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  box-shadow: 0 0 0 1px #21ba45 inset;\r\n  color: #21ba45;\r\n  font-size: 1rem;\r\n  min-height: 1em;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.75em 1.5em;\r\n  font-weight: 700;\r\n  line-height: 1em;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  &:hover:enabled {\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: #21ba45;\r\n    letter-spacing: 0.05em;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Post from \"./../Post/Post\";\r\nimport {\r\n  PostsWrap,\r\n  Button,\r\n  NewPostWrap,\r\n  Input,\r\n  Textarea\r\n} from \"./Posts.styles\";\r\n\r\nPost.propTypes = {\r\n  posts: PropTypes.array,\r\n  onCreatePost: PropTypes.func,\r\n  onDeletePost: PropTypes.func\r\n};\r\n\r\nfunction Posts({ posts, onCreatePost, onDeletePost }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  if (!posts) {\r\n    return null;\r\n  }\r\n\r\n  const handleChange = (e, type) => {\r\n    if (type === \"title\") {\r\n      setTitle(e.target.value);\r\n    }\r\n    if (type === \"body\") {\r\n      setBody(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const newPost = {\r\n      title,\r\n      body\r\n    };\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n    onCreatePost(newPost);\r\n  };\r\n\r\n  const outputPosts = posts.map(post => {\r\n    return (\r\n      <Post\r\n        title={post.title || \"Title post\"}\r\n        body={post.body || \"Body post\"}\r\n        creator={post.creator || \"Anybody\"}\r\n        date={post.date || \"Body date\"}\r\n        id={post.id}\r\n        key={post.id}\r\n        onDeletePost={onDeletePost}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PostsWrap>{outputPosts}</PostsWrap>\r\n      <NewPostWrap>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"title\"\r\n          onChange={e => handleChange(e, \"title\")}\r\n          value={title}\r\n        />\r\n        <Textarea\r\n          type=\"text\"\r\n          placeholder=\"body\"\r\n          onChange={e => handleChange(e, \"body\")}\r\n          value={body}\r\n        />\r\n        <Button onClick={handleClick} disabled={!body || !title}>\r\n          Add new post\r\n        </Button>\r\n      </NewPostWrap>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","export const FETCH_POSTS = \"FETCH_POSTS\";\r\nexport const FETCH_POSTS_START = \"FETCH_POSTS_START\";\r\nexport const FETCH_POSTS_SUCCESS = \"FETCH_BLOGS_SUCCESS\";\r\nexport const FETCH_POSTS_FAIL = \"FETCH_POSTS_FAIL\";\r\n\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const CREATE_POST_START = \"CREATE_POST_START\";\r\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\";\r\nexport const CREATE_POST_FAIL = \"CREATE_POST_FAIL\";\r\n\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const DELETE_POST_START = \"DELETE_POST_START\";\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\r\nexport const DELETE_POST_FAIL = \"DELETE_POST_FAIL\";\r\n\r\nexport const FETCH_POST_DETAIL = \"FETCH_POST_DETAIL\";\r\nexport const FETCH_POST_DETAIL_START = \"FETCH_POST_DETAIL_START\";\r\nexport const FETCH_POST_DETAIL_SUCCESS = \"FETCH_POST_DETAIL_SUCCESS\";\r\nexport const FETCH_POST_DETAIL_FAIL = \"FETCH_POST_DETAIL_FAIL\";\r\n\r\nexport const SAVE_EDIT = \"SAVE_EDIT\";\r\nexport const SAVE_EDIT_START = \"SAVE_EDIT_START\";\r\nexport const SAVE_EDIT_SUCCESS = \"SAVE_EDIT_SUCCESS\";\r\nexport const SAVE_EDIT_FAIL = \"SAVE_EDIT_FAIL\";\r\n\r\nexport const CREATE_COMMENT = \"CREATE_COMMENT\";\r\nexport const CREATE_COMMENT_START = \"CREATE_COMMENT_START\";\r\nexport const CREATE_COMMENT_SUCCESS = \"CREATE_COMMENT_SUCCESS\";\r\nexport const CREATE_COMMENT_FAIL = \"CREATE_COMMENT_FAIL\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\n// FETCH POST\r\nexport const fetchPosts = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS\r\n  };\r\n};\r\n\r\nexport const fetchPostsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_START\r\n  };\r\n};\r\n\r\nexport const fetchPostsSuccess = posts => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_SUCCESS,\r\n    payload: { posts }\r\n  };\r\n};\r\n\r\nexport const fetchPostsFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.FETCH_POSTS_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// CREATE POST\r\n\r\nexport const createPost = newPost => {\r\n  return {\r\n    type: actionTypes.CREATE_POST,\r\n    payload: { newPost }\r\n  };\r\n};\r\n\r\nexport const createPostStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_START\r\n  };\r\n};\r\n\r\nexport const createPostSuccess = () => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_SUCCESS\r\n  };\r\n};\r\n\r\nexport const createPostFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.CREATE_POST_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// DELETE POST\r\nexport const deletePost = id => {\r\n  return {\r\n    type: actionTypes.DELETE_POST,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const deletePostStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_START\r\n  };\r\n};\r\n\r\nexport const deletePostSuccess = () => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_SUCCESS\r\n  };\r\n};\r\n\r\nexport const deletePostFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.DELETE_POST_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// FETCH DETAIL POST\r\nexport const fetchPostDetail = id => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL,\r\n    payload: { id }\r\n  };\r\n};\r\n\r\nexport const fetchPostDetailStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL_START\r\n  };\r\n};\r\n\r\nexport const fetchPostDetailSuccess = postDetail => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL_SUCCESS,\r\n    payload: { postDetail }\r\n  };\r\n};\r\n\r\nexport const fetchPostDetailFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.FETCH_POST_DETAIL_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// EDIT POST\r\nexport const saveEdit = editedPost => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT,\r\n    payload: { editedPost }\r\n  };\r\n};\r\n\r\nexport const saveEditStart = () => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT_START\r\n  };\r\n};\r\nexport const saveEditSuccess = () => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT_SUCCESS\r\n  };\r\n};\r\nexport const saveEditFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.SAVE_EDIT_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n\r\n// CREATE COMMENT\r\nexport const createComment = newComment => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT,\r\n    payload: { newComment }\r\n  };\r\n};\r\n\r\nexport const createCommentStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_START\r\n  };\r\n};\r\n\r\nexport const createCommentSuccess = () => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_SUCCESS\r\n  };\r\n};\r\n\r\nexport const createCommentFail = errorMessage => {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT_FAIL,\r\n    payload: { errorMessage }\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Posts from \"./../components/Posts/Posts\";\r\nimport * as actions from \"../store/actions\";\r\n\r\nPostsContainer.propTypes = {\r\n  onFetchPosts: PropTypes.func,\r\n  onCreatePost: PropTypes.func,\r\n  onDeletePost: PropTypes.func,\r\n  posts: PropTypes.array,\r\n  error: PropTypes.bool,\r\n  setReferrerDefault: PropTypes.func\r\n};\r\n\r\nfunction PostsContainer({\r\n  onFetchPosts,\r\n  onCreatePost,\r\n  onDeletePost,\r\n  posts,\r\n  error,\r\n  setReferrerDefault\r\n}) {\r\n  useEffect(() => {\r\n    setReferrerDefault();\r\n    onFetchPosts();\r\n  }, [onFetchPosts, setReferrerDefault]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    posts && (\r\n      <Posts\r\n        posts={posts}\r\n        onCreatePost={onCreatePost}\r\n        onDeletePost={onDeletePost}\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.posts.posts,\r\n    error: state.posts.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPosts: () => dispatch(actions.fetchPosts()),\r\n    onCreatePost: newPost => dispatch(actions.createPost(newPost)),\r\n    onDeletePost: id => dispatch(actions.deletePost(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostsContainer);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CreateCommentWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const BodyComment = styled.textarea`\r\n  padding: 0.5em;\r\n  margin-bottom: 1em;\r\n\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const ButtonCreate = styled.button`\r\n  box-shadow: 0 0 0 1px #21ba45 inset;\r\n  color: #21ba45;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  min-height: 1em;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.75em 1.5em;\r\n  font-weight: 700;\r\n  line-height: 1em;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  :hover:enabled {\r\n    color: #fff;\r\n    background-color: #21ba45;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    cursor: initial;\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  BodyComment,\r\n  ButtonCreate,\r\n  CreateCommentWrap\r\n} from \"./CreateComment.styles\";\r\n\r\nCreateComment.propTypes = {\r\n  onCreateComment: PropTypes.func,\r\n  id: PropTypes.number\r\n};\r\n\r\nfunction CreateComment({ onCreateComment, id }) {\r\n  const [areaValue, serAreaValue] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    serAreaValue(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const newComment = {\r\n      id,\r\n      body: areaValue\r\n    };\r\n\r\n    serAreaValue(\"\");\r\n    onCreateComment(newComment);\r\n  };\r\n\r\n  return (\r\n    <CreateCommentWrap>\r\n      <BodyComment\r\n        value={areaValue}\r\n        onChange={handleChange}\r\n        placeholder=\"Add comment\"\r\n      ></BodyComment>\r\n      <ButtonCreate disabled={!areaValue} onClick={handleClick}>\r\n        Create comment\r\n      </ButtonCreate>\r\n    </CreateCommentWrap>\r\n  );\r\n}\r\n\r\nexport default CreateComment;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CommentsWrap = styled.div`\r\n  padding: 0.25em 0.35em;\r\n  margin: 0 0 0.25em 1em;\r\n`;\r\n\r\nexport const Comment = styled.p``;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CreateComment from \"./../CreateComment/CreateComment\";\r\nimport { Comment, CommentsWrap } from \"./Comments.styles\";\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array,\r\n  onCreateComment: PropTypes.func,\r\n  id: PropTypes.number\r\n};\r\n\r\nfunction Comments({ comments, onCreateComment, id }) {\r\n  const outputComments = comments.map(com => (\r\n    <Comment key={com.id}>- {com.body}</Comment>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div>Comments:</div>\r\n      <CommentsWrap>{outputComments}</CommentsWrap>\r\n      <CreateComment onCreateComment={onCreateComment} id={id} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ViewPostWrap = styled.div``;\r\n\r\nexport const Author = styled.div`\r\n  display: inline-block;\r\n  font-size: 1.2em;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  font-weight: 600;\r\n  margin-right: 0.5em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const CreateDate = styled.span`\r\n  display: inline-block;\r\n  color: rgba(0, 0, 0, 0.4);\r\n  font-size: 0.8em;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  box-shadow: 0 0 0 1px #21ba45 inset;\r\n  color: #21ba45;\r\n  font-size: 0.8em;\r\n  cursor: pointer;\r\n  outline: 0;\r\n  border: none;\r\n  background: none;\r\n  padding: 0.25em 0.75em;\r\n  font-weight: normal;\r\n  line-height: 1.2;\r\n  text-align: center;\r\n  border-radius: 0.3rem;\r\n  transition: all 0.25s ease;\r\n  margin-left: 1em;\r\n  :hover:enabled {\r\n    color: #fff;\r\n    background-color: #21ba45;\r\n  }\r\n  &:active:enabled {\r\n    background-color: grey;\r\n  }\r\n  &:disabled {\r\n    cursor: initial;\r\n    color: lightgrey;\r\n    box-shadow: 0 0 0 1px lightgrey inset;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-style: italic;\r\n  font-size: 1em;\r\n  margin: 0.5em 0;\r\n  span {\r\n    font-style: normal;\r\n  }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  margin-left: 0.5em;\r\n  margin: 0 0 1em 1em;\r\n`;\r\n\r\nexport const InputEditWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5em 0;\r\n`;\r\n\r\nexport const InputTitle = styled.input`\r\n  flex: 1 0 auto;\r\n  max-width: 100%;\r\n  padding: 0.5em;\r\n  margin-bottom: 0.25em;\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  color: rgba(0, 0, 0, 0.9);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const InputBody = styled.textarea`\r\n  padding: 0.5em;\r\n  margin-bottom: 1em;\r\n\r\n  outline: none;\r\n  border: 1px solid rgba(34, 36, 38, 0.15);\r\n  border-radius: 0.3em;\r\n  transition: box-shadow 0.1s ease, border-color 0.1s ease;\r\n  &:focus {\r\n    border-color: #85b7d9;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Comments from \"./Comments/Comments\";\r\nimport {\r\n  ViewPostWrap,\r\n  Author,\r\n  CreateDate,\r\n  Title,\r\n  Body,\r\n  Button,\r\n  InputEditWrap,\r\n  InputTitle,\r\n  InputBody\r\n} from \"./PostDetail.styles\";\r\n\r\nPostDetail.propTypes = {\r\n  post: PropTypes.object,\r\n  onSaveEdit: PropTypes.func,\r\n  onCreateComment: PropTypes.func\r\n};\r\n\r\nfunction PostDetail({ post, onSaveEdit, onCreateComment }) {\r\n  const {\r\n    creator = \"Anybody\",\r\n    date = \"Must be date\",\r\n    title,\r\n    body,\r\n    comments,\r\n    id\r\n  } = post;\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [titleEdit, setTitleEdit] = useState(title);\r\n  const [bodyEdit, setBodyEdit] = useState(body);\r\n\r\n  const handleClickEdit = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleClickSave = () => {\r\n    setEditing(false);\r\n    onSaveEdit({ titleEdit, bodyEdit, id, date, creator });\r\n  };\r\n\r\n  const handleChange = (e, type) => {\r\n    if (type === \"title\") {\r\n      setTitleEdit(e.target.value);\r\n    }\r\n    if (type === \"body\") {\r\n      setBodyEdit(e.target.value);\r\n    }\r\n  };\r\n\r\n  let summary = (\r\n    <>\r\n      <Title>\r\n        <span>Title: </span>\r\n        {title}\r\n      </Title>\r\n      <Body>{body}</Body>\r\n    </>\r\n  );\r\n\r\n  if (editing) {\r\n    summary = (\r\n      <InputEditWrap>\r\n        <InputTitle\r\n          value={titleEdit}\r\n          onChange={e => handleChange(e, \"title\")}\r\n        />\r\n        <InputBody value={bodyEdit} onChange={e => handleChange(e, \"body\")} />\r\n      </InputEditWrap>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ViewPostWrap>\r\n      <Author>{creator}</Author>\r\n      <CreateDate>{date}</CreateDate>\r\n      <Button disabled={editing} onClick={handleClickEdit}>\r\n        Edit\r\n      </Button>\r\n      <Button disabled={!editing} onClick={handleClickSave}>\r\n        Save\r\n      </Button>\r\n      {summary}\r\n      <Comments comments={comments} onCreateComment={onCreateComment} id={id} />\r\n    </ViewPostWrap>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport PostDetail from \"./../components/PostDetail/PostDetail\";\r\nimport * as actions from \"../store/actions\";\r\n\r\nViewPostContainer.propTypes = {\r\n  onFetchPostDetail: PropTypes.func,\r\n  onSaveEdit: PropTypes.func,\r\n  onCreateComment: PropTypes.func,\r\n  post: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  referrer: PropTypes.string,\r\n  setReferrerDefault: PropTypes.func\r\n};\r\n\r\nfunction ViewPostContainer({\r\n  onFetchPostDetail,\r\n  onSaveEdit,\r\n  onCreateComment,\r\n  post,\r\n  isFetching,\r\n  error,\r\n  referrer\r\n}) {\r\n  let { postId } = useParams();\r\n\r\n  useEffect(() => {\r\n    onFetchPostDetail(postId);\r\n  }, [onFetchPostDetail, postId]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  let summary = post && (\r\n    <PostDetail\r\n      post={post}\r\n      onSaveEdit={onSaveEdit}\r\n      onCreateComment={onCreateComment}\r\n    />\r\n  );\r\n  if (referrer) {\r\n    summary = <Redirect to={referrer} />;\r\n  }\r\n  return summary;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    post: state.posts.post,\r\n    error: state.posts.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPostDetail: id => dispatch(actions.fetchPostDetail(id)),\r\n    onSaveEdit: editedPost => dispatch(actions.saveEdit(editedPost)),\r\n    onCreateComment: newComment => dispatch(actions.createComment(newComment))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewPostContainer);\r\n","import styled from \"styled-components\";\n\nexport const AppWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nexport const BodyWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  padding: 1.5em;\n`;\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderWrap = styled.header`\r\n  position: relative;\r\n  display: flex;\r\n  height: 50px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: orange;\r\n`;\r\n\r\nexport const HeaderTitle = styled.h2`\r\n  color: white;\r\n  align-self: center;\r\n`;\r\n\r\nexport const NavButton = styled.button`\r\n  transform: rotate(180deg);\r\n  border: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  background-color: transparent;\r\n  color: #fff;\r\n  font-size: 2em;\r\n  font-weight: 700;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  line-height: 50px;\r\n  margin-left: 20px;\r\n  outline: none;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    cursor: pointer;\r\n    font-size: 2.1em;\r\n    color: lightgreen;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { HeaderWrap, HeaderTitle, NavButton } from \"./Header.styles\";\r\n\r\nHeader.propTypes = {\r\n  handleClickBack: PropTypes.func\r\n};\r\n\r\nfunction Header({ handleClickBack }) {\r\n  return (\r\n    <>\r\n      <HeaderWrap>\r\n        <NavButton onClick={handleClickBack}>&#10150;</NavButton>\r\n        <HeaderTitle>Develops Today</HeaderTitle>\r\n      </HeaderWrap>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport PostsContainer from \"./containers/PostsContainer\";\nimport ViewPostContainer from \"./containers/ViewPostContainer\";\nimport { AppWrap, BodyWrap } from \"./App.styles\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  const [referrer, setReferrer] = useState(null);\n\n  const setReferrerDefault = () => {\n    setReferrer(null);\n  };\n\n  const handleClickBack = () => {\n    setReferrer(\"/posts\");\n  };\n\n  const routes = (\n    <Switch>\n      <Route path=\"/posts\" exact>\n        <PostsContainer setReferrerDefault={setReferrerDefault} />\n      </Route>\n      <Route path=\"/posts/:postId\" exact>\n        <ViewPostContainer referrer={referrer} />\n      </Route>\n      <Redirect to=\"/posts\" />\n    </Switch>\n  );\n\n  return (\n    <AppWrap>\n      <Header handleClickBack={handleClickBack} />\n      <BodyWrap>{routes}</BodyWrap>\n    </AppWrap>\n  );\n}\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  posts: null,\r\n  post: null,\r\n  isFetching: false,\r\n  isCreating: false,\r\n  isFetchingPostDetail: false,\r\n  isEditing: false,\r\n  isCommenting: false,\r\n  error: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    // FETCH POST\r\n    case actionTypes.FETCH_POSTS_START:\r\n      return { ...state, error: false, isFetching: true };\r\n\r\n    case actionTypes.FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload.posts,\r\n        error: false,\r\n        isFetching: false\r\n      };\r\n\r\n    case actionTypes.FETCH_POSTS_FAIL:\r\n      return { ...state, error: payload.errorMessage, isFetching: false };\r\n\r\n    // CREATE POST\r\n    case actionTypes.CREATE_POST_START:\r\n      return { ...state, error: false, isCreating: true };\r\n\r\n    case actionTypes.CREATE_POST_SUCCESS:\r\n      return { ...state, error: false, isCreating: false };\r\n\r\n    case actionTypes.CREATE_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload.errorMessage,\r\n        isCreating: false\r\n      };\r\n\r\n    // DELETE POST\r\n    case actionTypes.DELETE_POST_START:\r\n      return { ...state, error: false, isCommenting: true };\r\n\r\n    case actionTypes.DELETE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        isCommenting: false\r\n      };\r\n\r\n    case actionTypes.DELETE_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload.errorMessage,\r\n        isCommenting: false\r\n      };\r\n\r\n    // FETCH POST DETAIL\r\n\r\n    case actionTypes.FETCH_POST_DETAIL_START:\r\n      return { ...state, error: false, isFetchingPostDetail: true };\r\n\r\n    case actionTypes.FETCH_POST_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload.postDetail,\r\n        error: false,\r\n        isFetchingPostDetail: false\r\n      };\r\n\r\n    case actionTypes.FETCH_POST_DETAIL_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload.errorMessage,\r\n        isFetchingPostDetail: false\r\n      };\r\n\r\n    // SAVE EDIT\r\n    case actionTypes.SAVE_EDIT_START:\r\n      return { ...state, error: false, isEditing: true };\r\n\r\n    case actionTypes.SAVE_EDIT_SUCCESS:\r\n      return { ...state, error: false, isEditing: false };\r\n\r\n    case actionTypes.SAVE_EDIT_FAIL:\r\n      return { ...state, error: payload.errorMessage, isEditing: false };\r\n\r\n    // CREATE COMMENT\r\n    case actionTypes.CREATE_COMMENT_START:\r\n      return { ...state, error: false, isEditing: true };\r\n\r\n    case actionTypes.CREATE_COMMENT_SUCCESS:\r\n      return { ...state, error: false, isEditing: false };\r\n\r\n    case actionTypes.CREATE_COMMENT_FAIL:\r\n      return { ...state, error: payload.errorMessage, isEditing: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n  baseURL: \"https://simple-blog-api.crew.red\",\r\n  headers: { \"Content-Type\": \"application/json\" }\r\n});\r\n\r\nexport default instanse;\r\n","export function currentDate() {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  return `${year}-${month < 10 ? `0${month}` : month}-${day}`;\r\n}\r\n","import { put } from \"redux-saga/effects\";\r\n\r\nimport axios from \"../../api/blogApi\";\r\nimport * as actions from \"../actions\";\r\nimport { currentDate } from \"../../shared/utilities\";\r\n\r\nexport function* fetchPostsSaga() {\r\n  yield put(actions.fetchPostsStart());\r\n  try {\r\n    const response = yield axios.get(\"/posts\");\r\n    const posts = response.data;\r\n    yield put(actions.fetchPostsSuccess(posts));\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.fetchPostsFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* createPostSaga({ payload }) {\r\n  const {\r\n    newPost: { title, body, creator = \"Oleh\" }\r\n  } = payload;\r\n  const dataPost = {\r\n    title,\r\n    body,\r\n    creator,\r\n    date: currentDate()\r\n  };\r\n\r\n  yield put(actions.createPostStart());\r\n\r\n  try {\r\n    yield axios.post(\"/posts\", dataPost);\r\n    yield put(actions.createPostSuccess());\r\n    yield put(actions.fetchPosts());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.createPostFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* deletePostSaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(actions.deletePostStart());\r\n  try {\r\n    yield axios.delete(`/posts/${id}`);\r\n    yield put(actions.deletePostSuccess());\r\n    yield put(actions.fetchPosts());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.deletePostFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* fetchPostDetailSaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(actions.fetchPostDetailStart());\r\n  try {\r\n    const response = yield axios.get(`/posts/${id}?_embed=comments`);\r\n    const postDetail = response.data;\r\n    yield put(actions.fetchPostDetailSuccess(postDetail));\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.fetchPostDetailFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* saveEditSaga({ payload }) {\r\n  const {\r\n    editedPost: { titleEdit, bodyEdit, id, creator = \"Anybody\", date }\r\n  } = payload;\r\n\r\n  const updatePost = {\r\n    title: titleEdit,\r\n    body: bodyEdit,\r\n    creator,\r\n    date\r\n  };\r\n\r\n  yield put(actions.saveEditStart());\r\n  try {\r\n    yield axios.put(`/posts/${id}`, updatePost);\r\n    yield put(actions.fetchPostDetail(id));\r\n    yield put(actions.saveEditSuccess());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.saveEditFail(errorMessage));\r\n  }\r\n}\r\n\r\nexport function* createCommentSaga({ payload }) {\r\n  const {\r\n    newComment: { body, id }\r\n  } = payload;\r\n\r\n  const newComment = {\r\n    body,\r\n    postId: id\r\n  };\r\n  yield put(actions.saveEditStart());\r\n  try {\r\n    yield axios.post(`/comments`, newComment);\r\n    yield put(actions.fetchPostDetail(id));\r\n    yield put(actions.saveEditSuccess());\r\n  } catch (error) {\r\n    const errorMessage = error.message;\r\n    yield put(actions.saveEditFail(errorMessage));\r\n  }\r\n}\r\n","import { takeEvery, all } from \"redux-saga/effects\";\r\nimport {\r\n  fetchPostsSaga,\r\n  createPostSaga,\r\n  deletePostSaga,\r\n  fetchPostDetailSaga,\r\n  saveEditSaga,\r\n  createCommentSaga\r\n} from \"./postsSaga\";\r\n\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nexport function* watchPosts() {\r\n  yield all([\r\n    takeEvery(actionTypes.FETCH_POSTS, fetchPostsSaga),\r\n    takeEvery(actionTypes.CREATE_POST, createPostSaga),\r\n    takeEvery(actionTypes.DELETE_POST, deletePostSaga),\r\n    takeEvery(actionTypes.FETCH_POST_DETAIL, fetchPostDetailSaga),\r\n    takeEvery(actionTypes.SAVE_EDIT, saveEditSaga),\r\n    takeEvery(actionTypes.CREATE_COMMENT, createCommentSaga)\r\n  ]);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport postsReducer from \"./store/reducers/postsReducer\";\nimport { watchPosts } from \"./store/sagas\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducers = combineReducers({\n  posts: postsReducer\n});\n\nconst store = createStore(\n  rootReducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(watchPosts);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}